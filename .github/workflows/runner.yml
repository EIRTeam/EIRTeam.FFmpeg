name: 🔗 GHA
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      doRelease:
        description: 'Publish new release'
        type: boolean
        default: false
        required: false

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-runner
  cancel-in-progress: true

jobs:
  windows-build-debug:
    name: 🏁 Windows Debug
    uses: ./.github/workflows/windows_builds.yml
    with:
      target: template_debug
  windows-build-release:
    name: 🏁 Windows Release
    uses: ./.github/workflows/windows_builds.yml
    with:
      target: template_release

  linux-build-debug:
    name: 🐧 Linux Debug
    uses: ./.github/workflows/linux_builds.yml
    with:
      target: template_debug
  linux-build-release:
    name: 🐧 Linux Release
    uses: ./.github/workflows/linux_builds.yml
    with:
      target: template_release

  android-build-debug-arm64:
    name: 🤖 Android Debug (arm64-v8a)
    uses: ./.github/workflows/android_builds.yml
    with:
      target: template_debug 
  android-build-release-arm64:
    name: 🤖 Android Release (arm64-v8a)
    uses: ./.github/workflows/android_builds.yml
    with:
      target: template_release
    

  static-checks:
    name: 📊 Static checks
    uses: ./.github/workflows/static_checks.yml

  publish_release:
    name: Publish release
    needs: [windows-build-debug, windows-build-release, linux-build-debug, linux-build-release, android-build-debug-arm64, android-build-release-arm64]
    runs-on: ubuntu-latest
    if: github.event.inputs.doRelease
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: artifacts_windows
      - name: Calculate short sha
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Create release
        id: create_release
        run: |
          mkdir artifacts
          cd ./artifacts_windows
          zip -9 -r eirteam-ffmpeg-${{ steps.vars.outputs.sha_short }}.zip *
          mv *.zip ../artifacts/
          cd ..
          set -xe
          shopt -s nullglob
          RELDATE="$(date +'%Y-%m-%d %H:%M')"
          NAME="Auto-Build $RELDATE"
          TAGNAME="autobuild-$(date +'%Y-%m-%d-%H-%M')"
          gh release create "$TAGNAME" --target "master" --title "$NAME" artifacts/*.{zip,tar.xz}
          echo "tag_name=${TAGNAME}" >> $GITHUB_OUTPUT
          echo "rel_date=${RELDATE}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}